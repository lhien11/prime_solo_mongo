1. Create a collection named orders.
db.createCollection('orders')

2. Insert at least 3 documents that represent an order. IMPORTANT: See section below for fields.
db.orders.insert(
    {orderDate: Date(), orderTotal: 35.07, lineItems: [
        {unitPrice: 1.49, quantity: 10, productName: "apple"},
        {unitPrice: 1.19, quantity: 15, productName: "orange"},
        {unitPrice: .29, quantity: 8, productName: "banana"}
    ]})

    db.orders.insert(
    {orderDate: Date(), orderTotal: 177.00, lineItems: [
        {unitPrice: 6.00, quantity: 10, productName: "eggs"},
        {unitPrice: 7.00, quantity: 15, productName: "bacon"},
        {unitPrice: 4.00, quantity: 3, productName: "bread"}
    ]})

    db.orders.insert(
    {orderDate: Date(), orderTotal: 105.00, lineItems: [
        {unitPrice: 1.00, quantity: 5, productName: "candy_bar"},
        {unitPrice: 4.00, quantity: 10, productName: "ice_cream"},
        {unitPrice: 3.00, quantity: 20, productName: "sour_worms"}
    ]})

3. Find a single order document, any order document.
db.getCollection('orders').find()

4. Find all orders and make them look pretty.
db.orders.find().pretty()

5. Find all orders with an orderDate that is prior to 1/1/2016.
db.orders.find({orderDate: { $lt: ISODate("2016-01-01")}})

6. Find all orders with an orderDate that is after 1/1/2016.
db.orders.find({orderDate: { $gte: ISODate("2016-01-01")}})

7. Find orders with lineItems that have a quantity that is less than 50, but greater than 5.
db.orders.find(
    {$and:[
        {"lineItems.quantity": {$gte: 5}},
        {"lineItems.quantity": {$lt: 50}}
    ]})
